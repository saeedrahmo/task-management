@using Microsoft.AspNetCore.Identity

@inject SignInManager<TaskManagement.Core.Models.ApplicationUser> SignInManager
@inject UserManager<TaskManagement.Core.Models.ApplicationUser> UserManager


<ul class="navbar-nav">

   
    @*@if (SignInManager.IsSignedIn(User))*@
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            @*<div id="manage" class="nav-link text-dark">Hello @identity.Name!</div>*@
            <div id="manage" class="nav-link text-dark">Hello @UserManager.GetUserName(User)!</div>
            @*<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>*@
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-controller="account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-controller="account" asp-action="Login">Login</a>
        </li>
    }
</ul>
