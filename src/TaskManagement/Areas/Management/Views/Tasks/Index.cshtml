@model IEnumerable<TaskManagement.Core.DTOs.PagedTaskListDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" asp-controller="Tasks" asp-area="Management" method="get">
    <div class="form-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Enter search query">
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                <a asp-action="Index" asp-controller="Tasks" asp-area="Management"
                   asp-route-sortOrder="@(string.Equals(ViewData["SortOrder"], "duedate_asc") ? "duedate_desc" : "duedate_asc")">@Html.DisplayNameFor(model => model.DueDate) @(string.Equals(ViewData["SortOrder"], "duedate_asc") ? "▼" : "▲")</a>
            </th>
            <th>
                <a asp-action="Index" asp-controller="Tasks" asp-area="Management"
                   asp-route-sortOrder="@(string.Equals(ViewData["SortOrder"], "priority_asc") ? "priority_desc" : "priority_asc")">@Html.DisplayNameFor(model => model.Priority) @(string.Equals(ViewData["SortOrder"], "priority_asc") ? "▼" : "▲")</a>
            </th>                       
            <th>
               <a asp-action="Index" asp-controller="Tasks" asp-area="Management"
                asp-route-sortOrder="@(string.Equals(ViewData["SortOrder"], "status_asc") ? "status_desc" : "status_asc")">@Html.DisplayNameFor(model => model.Status) @(string.Equals(ViewData["SortOrder"], "status_asc") ? "▼" : "▲")</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Assignee)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Assignee)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<!-- Render the pagination controls asp-route-pageSize="@((int)(ViewData[" PageSize"] ?? 0))" -->
<div class="pagination">
    @if ((int)(ViewData["PageNumber"] ?? 0) > 1)
    {
        <a class="page-link" asp-action="Index" asp-controller="Tasks" asp-area="Management" asp-route-pageNumber="@((int)(ViewData["PageNumber"]??0) - 1)" >Previous</a>
    }

    @for (int i = 1; i <= (int)(ViewData["TotalPages"]??0); i++)
    {
       <a class="page-link @(i == (int)(ViewData["PageNumber"]??0) ? "active" : "")" asp-action="Index" asp-controller="Tasks" asp-area="Management" asp-route-pageNumber="@i" >@i</a>
    }

    @if ((int)(ViewData["PageNumber"] ?? 0) < (int)(ViewData["TotalPages"] ?? 0))
    {
        <a class="page-link" asp-action="Index" asp-controller="Tasks" asp-area="Management" asp-route-pageNumber="@((int)(ViewData["PageNumber"]??0) + 1)">Next</a>
    }
</div>
